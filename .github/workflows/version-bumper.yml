name: Version Bumper

on:
  pull_request:
    branches:
      - staging

jobs:
  bumper:
    name: Version Bumper
    runs-on: ubuntu-latest
    if: ${{ github.head_ref != 'production' }}
    permissions:
      contents: write
    env:
      SHOULD_COMMIT: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Echo branch that the PR was made from
        run: echo "${{github.head_ref}}"

      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20'

      # - name: Install dependencies
      #   run: npm ci

      # - name: Run semantic-release in dry-run mode
      #   id: semantic-release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git checkout ${{github.head_ref}}
      #     export GITHUB_REF=${{github.head_ref}} && npx semantic-release --dry-run --no-ci --branches "${{github.head_ref}}" | tee release_output.log
      #     VERSION=$(grep "The next release version is" release_output.log | awk '{print $NF}')
      #     echo "NEXT_VERSION=$VERSION" >> $GITHUB_ENV

      # - name: Update version in package.json
      #   run: |
      #     echo "Updating package.json to version ${{env.NEXT_VERSION}}"
      #     npm version ${{env.NEXT_VERSION}} --no-git-tag-version || echo "Already using ${{env.NEXT_VERSION}}"

      # - name: Check if there are changes to commit
      #   run: |
      #     git diff --exit-code || (echo "SHOULD_COMMIT=true" >> $GITHUB_ENV)

      # - name: Commit changes
      #   if: env.SHOULD_COMMIT == 'true'
      #   env:
      #     HUSKY: 0
      #   run: |
      #     git config pull.rebase true
      #     git config --global user.name 'github-actions[bot]'
      #     git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      #     git add ./package.json
      #     git add ./package-lock.json
      #     git commit -m "chore(no-release): bump npm version to ${{env.NEXT_VERSION}}"
      #     echo "Commiting changes to ${{github.head_ref}}"
      #     git push origin HEAD:${{ github.head_ref }}
