name: Linting and Unit Testing

on:
  pull_request:
    branches-ignore:
      - production
  workflow_dispatch:
  workflow_call:
    inputs:
      source:
        required: true
        type: string
      reference:
        required: false
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_ACCESS_TOKEN:
        required: true

env:
  NODE_VERSION: 20

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - gesture-firebase
          - gesture-firebase-user
    env:
      PROJECT_PATH: ${{ matrix.project }}/functions
    name: Lint and Test for ${{ matrix.project }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache node_modules
        id: dependencies-cache
        uses: actions/cache@v4
        env:
          PACKAGE_LOCK_PATH: ${{ env.PROJECT_PATH }}/package-lock.json
        with:
          path: ${{ env.PROJECT_PATH }}/node_modules
          key: main-npm-${{ env.NODE_VERSION }}-${{ runner.os }}-${{ hashFiles( env.PACKAGE_LOCK_PATH ) }}

      - name: Install dependencies
        if: steps.dependencies-cache.outputs.cache-hit != 'true'
        run: cd ${{ env.PROJECT_PATH }} && npm i

      - name: Run ESLint
        run: cd ${{ env.PROJECT_PATH }} && npm run lint

      - name: Compile Typescript
        run: cd ${{ env.PROJECT_PATH }} && npx tsc

      - name: Run Unit Tests
        run: cd ${{ env.PROJECT_PATH }} && npm test
